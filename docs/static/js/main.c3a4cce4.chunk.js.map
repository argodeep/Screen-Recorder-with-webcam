{"version":3,"sources":["play.svg","stop.svg","pause.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","mixer","mediaRecorder","recordedBlobs","videoPreview","document","querySelector","mixerOptions","App","useState","permissionAllowed","setPermission","started","setStart","addStreamStopListener","stream","callback","addEventListener","getTracks","forEach","track","afterScreenCaptured","screenStream","navigator","mediaDevices","getUserMedia","video","width","height","frameRate","audio","then","cameraStream","a","fullcanvas","parseInt","top","left","MultiStreamsMixer","frameInterval","startDrawingFrames","srcObject","getMixedStream","options","mimeType","MediaRecorder","isTypeSupported","console","error","log","onstop","event","releaseStreams","pause","src","pictureInPictureElement","exitPictureInPicture","stop","download","ondataavailable","handleDataAvailable","start","state","captureStream","startRecording","getDisplayMedia","alert","data","size","push","blob","Blob","type","url","window","URL","createObjectURL","createElement","style","display","href","Date","getTime","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","useEffect","value","camera","handlePermission","className","textAlign","target","rel","backgroundColor","fontWeight","justifyContent","alignItems","flexDirection","id","autoPlay","muted","playsInline","marginTop","border","borderRadius","cursor","margin","fontSize","padding","onClick","play","alt","marginRight","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6HAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,2FCA3CD,EAAOC,QAAU,IAA0B,mC,yCCSvCC,EACAC,EACAC,E,sIAJAC,EAAeC,SAASC,cAAc,SACtCC,EAAe,GAshBJC,MAjhBf,WAAgB,IAAD,EAC8BC,oBAAS,GADvC,mBACNC,EADM,KACaC,EADb,OAEeF,oBAAS,GAFxB,mBAENG,EAFM,KAEGC,EAFH,KAiBb,SAASC,EAAsBC,EAAQC,GACrCD,EAAOE,iBACL,SACA,WACED,IACAA,EAAW,gBAEb,GAEFD,EAAOE,iBACL,YACA,WACED,IACAA,EAAW,gBAEb,GAEFD,EAAOG,YAAYC,SAAQ,SAAUC,GACnCA,EAAMH,iBACJ,SACA,WACED,IACAA,EAAW,gBAEb,GAEFI,EAAMH,iBACJ,YACA,WACED,IACAA,EAAW,gBAEb,MA0HN,SAASK,EAAoBC,GAC3BC,UAAUC,aACPC,aAAa,CACZC,MAAQ,CACNC,MAAO,IACPC,OAAQ,IACRC,UAAW,IAEbC,OAAO,IAERC,KATH,uCASQ,WAAgBC,GAAhB,eAAAC,EAAA,sDACJX,EAAaY,YAAa,EAC1BZ,EAAaK,MAAQ,KACrBL,EAAaM,OAAS,KAEtBI,EAAaL,MAAQQ,SAAU,IAAYb,EAAaK,OACxDK,EAAaJ,OAASO,SAAU,IAAYb,EAAaK,OACzDK,EAAaI,IAAMd,EAAaM,OAASI,EAAaJ,OACtDI,EAAaK,KAAOf,EAAaK,MAAQK,EAAaL,OAKtD1B,EAAQ,IAAIqC,IAAkB,CAAChB,EAAcU,KAEvCO,cAAgB,EACtBtC,EAAMuC,sBACNpC,EAAeC,SAASC,cAAc,UACzBmC,UAAYxC,EAAMyC,iBAC/BvC,EAAgB,GACZwC,EAAU,CAAEC,SAAU,6BACrBC,cAAcC,gBAAgBH,EAAQC,YACzCG,QAAQC,MAAR,UAAiBL,EAAQC,SAAzB,sBACAD,EAAU,CAAEC,SAAU,8BACjBC,cAAcC,gBAAgBH,EAAQC,YACzCG,QAAQC,MAAR,UAAiBL,EAAQC,SAAzB,sBACAD,EAAU,CAAEC,SAAU,cACjBC,cAAcC,gBAAgBH,EAAQC,YACzCG,QAAQC,MAAR,UAAiBL,EAAQC,SAAzB,sBACAD,EAAU,CAAEC,SAAU,OA7BxB,UAmCF1C,EAAgB,IAAI2C,cAAc5C,EAAMyC,iBAAkBC,GAnCxD,0DAqCFI,QAAQC,MAAM,0CAAd,MArCE,2BAyCJD,QAAQE,IACN,wBACA/C,EACA,eACAyC,GAEFzC,EAAcgD,OAAd,uCAAuB,WAAOC,GAAP,SAAAlB,EAAA,yDACrBc,QAAQE,IAAI,qBAAsBE,GAClCJ,QAAQE,IAAI,mBAAoB9C,GAChCF,EAAMmD,iBACNhD,EAAaiD,QACbjD,EAAakD,IAAM,KACflD,IAAiBC,SAASkD,wBANT,gCAOblD,SAASmD,uBAPI,OASrBxB,EAAad,YAAYC,SAAQ,SAAUC,GACzCA,EAAMqC,UAERnC,EAAaJ,YAAYC,SAAQ,SAAUC,GACzCA,EAAMqC,UAERC,IAfqB,4CAAvB,sDAiBAxD,EAAcyD,gBAAkBC,EAChC1D,EAAc2D,QACdd,QAAQE,IAAI,wBAAyB/C,GACrCW,GAAS,GAETC,EAAsBQ,EAAD,sBAAe,sBAAAW,EAAA,yDACN,aAAxB/B,EAAc4D,MADgB,oBAEhC5D,EAAcuD,OACdxD,EAAMmD,iBACNhD,EAAaiD,QACbjD,EAAakD,IAAM,KACflD,IAAiBC,SAASkD,wBANE,gCAOxBlD,SAASmD,uBAPe,OAShCxB,EAAad,YAAYC,SAAQ,SAAUC,GACzCA,EAAMqC,UAERnC,EAAaJ,YAAYC,SAAQ,SAAUC,GACzCA,EAAMqC,UAbwB,6CArEhC,2DATR,uDA5KW,SAkTEzB,IAlTF,2EAkTb,4BAAAC,EAAA,6DACM8B,EAAgB,KADtB,kBAG0BxC,UAAUC,aAAaC,aAAa,CACxDK,OAAO,EACPJ,OAAO,IALb,OAGIqC,EAHJ,uDAQIhB,QAAQC,MAAM,gBARlB,iCAUSe,GAVT,0DAlTa,sBA+Tb,SAASC,IA9BHtD,IACEa,UAAU0C,gBACZ1C,UAAU0C,gBAAgB,CAAEvC,OAAO,IAAQK,MAAK,SAACT,GAC/CD,EAAoBC,MAEbC,UAAUC,aAAayC,gBAChC1C,UAAUC,aACPyC,gBAAgB,CAAEvC,OAAO,IACzBK,MAAK,SAACT,GACLD,EAAoBC,MAGxB4C,MAAM,0DAsBZ,SAASN,EAAoBT,GAC3BJ,QAAQE,IAAI,sBAAuBE,GAC/BA,EAAMgB,MAAQhB,EAAMgB,KAAKC,KAAO,GAClCjE,EAAckE,KAAKlB,EAAMgB,MAtUhB,SA8UET,IA9UF,2EA8Ub,qBAAAzB,EAAA,SAAAA,EAAA,sDACQqC,EAAO,IAAIC,KAAKpE,EAAe,CAAEqE,KAAM,cACvCC,EAAMC,OAAOC,IAAIC,gBAAgBN,IACjCrC,EAAI5B,SAASwE,cAAc,MAC/BC,MAAMC,QAAU,OAClB9C,EAAE+C,KAAOP,EACTxC,EAAEyB,UAAW,IAAIuB,MAAOC,UAAY,OACpC7E,SAAS8E,KAAKC,YAAYnD,GAC1BA,EAAEoD,QACFC,YAAW,WACTjF,SAAS8E,KAAKI,YAAYtD,GAC1ByC,OAAOC,IAAIa,gBAAgBf,KAC1B,KACH5D,GAAS,GACTT,EAAaiD,QACbjD,EAAakD,IAAM,KAfrB,6CA9Ua,sBAgWb,OA5VAmC,qBAAU,YACY,uCAAG,4BAAAxD,EAAA,6DACrB1B,EAAamF,MAAQ,gBADA,SAEF1D,IAFE,OAEjB2D,EAFiB,OAInBhF,EADa,OAAXgF,GAHiB,2CAAH,qDASpBC,KACC,CAAClF,IAkVF,yBAAKmF,UAAU,OACb,sEACA,uBAAGA,UAAU,QAAb,kEAGA,uBAAGf,MAAO,CAAEgB,UAAW,WAAvB,qBACqB,IACnB,uBACEd,KAAK,gFACLe,OAAO,SACPC,IAAI,uBAHN,kBAFF,IASI,IACF,uBACEhB,KAAK,gEACLe,OAAO,SACPC,IAAI,uBAHN,mBAQF,yBAAKH,UAAU,WACXnF,GACA,6BACE,2BACE4C,IAAI,GACJwB,MAAO,CAAEmB,gBAAiB,OAAQrE,OAAQ,OAE5C,2BACE,0BAAMkD,MAAO,CAAEoB,WAAY,MAA3B,UADF,mEAMHxF,GACC,yBACEoE,MAAO,CACLC,QAAS,OACToB,eAAgB,SAChBC,WAAY,SACZC,cAAe,SACfzE,OAAQ,SAGV,2BACE0E,GAAG,QACHxB,MAAO,CAAElD,OAAQ,MAAOqE,gBAAiB,QACzCM,UAAQ,EACRC,OAAK,EACLC,aAAW,GALb,gDA8BA,yBACE3B,MAAO,CACLC,QAAS,OACTpD,MAAO,OACPwE,eAAgB,gBAChBO,UAAW,MAGX9F,GACA,4BACEkE,MAAO,CACL6B,OAAQ,iBACRC,aAAc,EACdC,OAAQ,UACRC,OAAQ,OACRC,SAAU,GACVhC,QAAS,OACTqB,WAAY,SACZD,eAAgB,SAChBa,QAAS,EACTrF,MAAO,IACPsE,gBAAiB,QAEnBgB,QAAS,kBAAMjD,MAEf,yBACEV,IAAK4D,IACLC,IAAI,OACJrC,MAAO,CAAElD,OAAQ,GAAIwF,YAAa,KAC5B,IApBV,SAgDDxG,GACC,4BACEkE,MAAO,CACL6B,OAAQ,iBACRC,aAAc,EACdC,OAAQ,UACRC,OAAQ,OACRC,SAAU,GACVhC,QAAS,OACTqB,WAAY,SACZD,eAAgB,SAChBa,QAAS,EACTrF,MAAO,IACPsE,gBAAiB,QAEnBgB,QAAS,WA1KvB/G,EAAcuD,SA4KA,yBACEH,IAAKG,IACL0D,IAAI,OACJrC,MAAO,CAAElD,OAAQ,GAAIwF,YAAa,KAC5B,IApBV,kBA4BV,uBAAGtC,MAAO,CAAEgB,UAAW,SAAUY,UAAW,KAA5C,cACc,IACZ,uBACE1B,KAAK,+CACLe,OAAO,SACPC,IAAI,uBAHN,iBCtgBFqB,EAAcC,QACW,cAA7B5C,OAAO6C,SAASC,UAEe,UAA7B9C,OAAO6C,SAASC,UAEhB9C,OAAO6C,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BrG,UAAUsG,cACPC,SAASH,GACT5F,MAAK,SAAAgG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBnE,QACfvC,UAAUsG,cAAcO,YAI1BrF,QAAQE,IACN,iHAKE2E,GAAUA,EAAOS,UACnBT,EAAOS,SAASN,KAMlBhF,QAAQE,IAAI,sCAGR2E,GAAUA,EAAOU,WACnBV,EAAOU,UAAUP,WAO5BQ,OAAM,SAAAvF,GACLD,QAAQC,MAAM,4CAA6CA,MC1FjEwF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFrI,SAASsI,eAAe,SDYnB,SAAkBf,GACvB,GAA6C,kBAAmBrG,UAAW,CAGzE,GADkB,IAAIoD,IAAIiE,YAAwBlE,OAAO6C,SAASvC,MACpD6D,SAAWnE,OAAO6C,SAASsB,OAIvC,OAGFnE,OAAOzD,iBAAiB,QAAQ,WAC9B,IAAM0G,EAAK,UAAMiB,YAAN,sBAEPvB,IAgEV,SAAiCM,EAAOC,GAEtCkB,MAAMnB,EAAO,CACXoB,QAAS,CAAE,iBAAkB,YAE5BhH,MAAK,SAAAiH,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C7H,UAAUsG,cAAcwB,MAAMtH,MAAK,SAAAgG,GACjCA,EAAauB,aAAavH,MAAK,WAC7B2C,OAAO6C,SAASgC,eAKpB7B,EAAgBC,EAAOC,MAG1BW,OAAM,WACLxF,QAAQE,IACN,oEAvFAuG,CAAwB7B,EAAOC,GAI/BrG,UAAUsG,cAAcwB,MAAMtH,MAAK,WACjCgB,QAAQE,IACN,iHAMJyE,EAAgBC,EAAOC,OClC/BC,K","file":"static/js/main.c3a4cce4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.a9759291.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.664d473c.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.2e6b892b.svg\";","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport play from \"./play.svg\";\nimport stop from \"./stop.svg\";\nimport pause from \"./pause.svg\";\nimport MultiStreamsMixer from \"multistreamsmixer\";\n\nvar videoPreview = document.querySelector(\"video\");\nvar mixerOptions = {};\nvar mixer;\nvar mediaRecorder;\nvar recordedBlobs;\n\nfunction App() {\n  const [permissionAllowed, setPermission] = useState(false);\n  const [started, setStart] = useState(false);\n\n  useEffect(() => {\n    let handlePermission = async () => {\n      mixerOptions.value = \"camera-screen\";\n      let camera = await cameraStream();\n      if (camera === null) {\n        setPermission(false);\n      } else {\n        setPermission(true);\n      }\n    };\n    handlePermission();\n  }, [permissionAllowed]);\n\n  function addStreamStopListener(stream, callback) {\n    stream.addEventListener(\n      \"ended\",\n      function () {\n        callback();\n        callback = function () {};\n      },\n      false\n    );\n    stream.addEventListener(\n      \"inactive\",\n      function () {\n        callback();\n        callback = function () {};\n      },\n      false\n    );\n    stream.getTracks().forEach(function (track) {\n      track.addEventListener(\n        \"ended\",\n        function () {\n          callback();\n          callback = function () {};\n        },\n        false\n      );\n      track.addEventListener(\n        \"inactive\",\n        function () {\n          callback();\n          callback = function () {};\n        },\n        false\n      );\n    });\n  }\n\n  function fullCanvasRenderHandler(stream, textToDisplay) {\n    // on-video-render:\n    // called as soon as this video stream is drawn (painted or recorded) on canvas2d surface\n    stream.onRender = function (context, x, y, width, height, idx) {\n      context.font = \"50px Georgia\";\n      var measuredTextWidth = parseInt(\n        context.measureText(textToDisplay).width\n      );\n      x = x + (parseInt(width - measuredTextWidth) - 40);\n      y = y + 80;\n      context.strokeStyle = \"rgb(255, 0, 0)\";\n      context.fillStyle = \"rgba(255, 255, 0, .5)\";\n      roundRect(context, x - 20, y - 55, measuredTextWidth + 40, 75, 20, true);\n      var gradient = context.createLinearGradient(0, 0, width * 2, 0);\n      gradient.addColorStop(\"0\", \"magenta\");\n      gradient.addColorStop(\"0.5\", \"blue\");\n      gradient.addColorStop(\"1.0\", \"red\");\n      context.fillStyle = gradient;\n      context.fillText(textToDisplay, x, y);\n    };\n  }\n\n  function normalVideoRenderHandler(stream, textToDisplay, callback) {\n    // on-video-render:\n    // called as soon as this video stream is drawn (painted or recorded) on canvas2d surface\n    stream.onRender = function (context, x, y, width, height, idx, ignoreCB) {\n      if (!ignoreCB && callback) {\n        callback(context, x, y, width, height, idx, textToDisplay);\n        return;\n      }\n\n      context.font = \"40px Georgia\";\n      var measuredTextWidth = parseInt(\n        context.measureText(textToDisplay).width\n      );\n      x = x + parseInt(width - measuredTextWidth) / 2;\n      y = context.canvas.height - height + 50;\n      context.strokeStyle = \"rgb(255, 0, 0)\";\n      context.fillStyle = \"rgba(255, 255, 0, .5)\";\n      roundRect(context, x - 20, y - 35, measuredTextWidth + 40, 45, 20, true);\n      var gradient = context.createLinearGradient(0, 0, width * 2, 0);\n      gradient.addColorStop(\"0\", \"magenta\");\n      gradient.addColorStop(\"0.5\", \"blue\");\n      gradient.addColorStop(\"1.0\", \"red\");\n      context.fillStyle = gradient;\n      context.fillText(textToDisplay, x, y);\n    };\n  }\n\n  /**\n   * Draws a rounded rectangle using the current state of the canvas.\n   * If you omit the last three params, it will draw a rectangle\n   * outline with a 5 pixel border radius\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} x The top left x coordinate\n   * @param {Number} y The top left y coordinate\n   * @param {Number} width The width of the rectangle\n   * @param {Number} height The height of the rectangle\n   * @param {Number} [radius = 5] The corner radius; It can also be an object\n   *                 to specify different radii for corners\n   * @param {Number} [radius.tl = 0] Top left\n   * @param {Number} [radius.tr = 0] Top right\n   * @param {Number} [radius.br = 0] Bottom right\n   * @param {Number} [radius.bl = 0] Bottom left\n   * @param {Boolean} [fill = false] Whether to fill the rectangle.\n   * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n   */\n  // via: http://stackoverflow.com/a/3368118/552182\n  function roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke == \"undefined\") {\n      stroke = true;\n    }\n    if (typeof radius === \"undefined\") {\n      radius = 5;\n    }\n    if (typeof radius === \"number\") {\n      radius = {\n        tl: radius,\n        tr: radius,\n        br: radius,\n        bl: radius,\n      };\n    } else {\n      var defaultRadius = {\n        tl: 0,\n        tr: 0,\n        br: 0,\n        bl: 0,\n      };\n      for (var side in defaultRadius) {\n        radius[side] = radius[side] || defaultRadius[side];\n      }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(\n      x + width,\n      y + height,\n      x + width - radius.br,\n      y + height\n    );\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n      ctx.fill();\n    }\n    if (stroke) {\n      ctx.stroke();\n    }\n  }\n\n  function afterScreenCaptured(screenStream) {\n    navigator.mediaDevices\n      .getUserMedia({\n        video:  {\n          width: 160,\n          height: 120,\n          frameRate: 15\n        },\n        audio: true,\n      })\n      .then(async function (cameraStream) {\n        screenStream.fullcanvas = true;\n        screenStream.width = 1920; // or 3840\n        screenStream.height = 1080; // or 2160\n\n        cameraStream.width = parseInt((15 / 100) * screenStream.width);\n        cameraStream.height = parseInt((15 / 100) * screenStream.width);\n        cameraStream.top = screenStream.height - cameraStream.height;\n        cameraStream.left = screenStream.width - cameraStream.width;\n\n        // fullCanvasRenderHandler(screenStream, \"\");\n        // normalVideoRenderHandler(cameraStream, \"\");\n\n        mixer = new MultiStreamsMixer([screenStream, cameraStream]);\n\n        mixer.frameInterval = 1;\n        mixer.startDrawingFrames();\n        videoPreview = document.querySelector(\"video\");\n        videoPreview.srcObject = mixer.getMixedStream();\n        recordedBlobs = [];\n        let options = { mimeType: \"video/mp4;codecs=vp9,opus\" };\n        if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n          console.error(`${options.mimeType} is not supported`);\n          options = { mimeType: \"video/webm;codecs=vp8,opus\" };\n          if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n            console.error(`${options.mimeType} is not supported`);\n            options = { mimeType: \"video/webm\" };\n            if (!MediaRecorder.isTypeSupported(options.mimeType)) {\n              console.error(`${options.mimeType} is not supported`);\n              options = { mimeType: \"\" };\n            }\n          }\n        }\n\n        try {\n          mediaRecorder = new MediaRecorder(mixer.getMixedStream(), options);\n        } catch (e) {\n          console.error(\"Exception while creating MediaRecorder:\", e);\n          return;\n        }\n\n        console.log(\n          \"Created MediaRecorder\",\n          mediaRecorder,\n          \"with options\",\n          options\n        );\n        mediaRecorder.onstop = async (event) => {\n          console.log(\"Recorder stopped: \", event);\n          console.log(\"Recorded Blobs: \", recordedBlobs);\n          mixer.releaseStreams();\n          videoPreview.pause();\n          videoPreview.src = null;\n          if (videoPreview === document.pictureInPictureElement) {\n            await document.exitPictureInPicture();\n          }\n          cameraStream.getTracks().forEach(function (track) {\n            track.stop();\n          });\n          screenStream.getTracks().forEach(function (track) {\n            track.stop();\n          });\n          download();\n        };\n        mediaRecorder.ondataavailable = handleDataAvailable;\n        mediaRecorder.start();\n        console.log(\"MediaRecorder started\", mediaRecorder);\n        setStart(true);\n        // stop listner\n        addStreamStopListener(screenStream, async function () {\n          if (mediaRecorder.state !== \"inactive\") {\n            mediaRecorder.stop();\n            mixer.releaseStreams();\n            videoPreview.pause();\n            videoPreview.src = null;\n            if (videoPreview === document.pictureInPictureElement) {\n              await document.exitPictureInPicture();\n            }\n            cameraStream.getTracks().forEach(function (track) {\n              track.stop();\n            });\n            screenStream.getTracks().forEach(function (track) {\n              track.stop();\n            });\n          }\n        });\n        // open pip mode\n        // let t = setTimeout(async () => {\n        //   try {\n        //     // If there is no element in Picture-in-Picture yet, request for it\n        //     if (videoPreview !== document.pictureInPictureElement) {\n        //       await videoPreview.requestPictureInPicture();\n        //     }\n        //     // If Picture-in-Picture already exists, exit the mode\n        //     else {\n        //       await document.exitPictureInPicture();\n        //     }\n        //   } catch (error) {\n        //     console.log(`Oh Horror! ${error}`);\n        //   } finally {\n        //     console.log(\"started\");\n        //     clearTimeout(t);\n        //   }\n        // }, 1000);\n      });\n  }\n\n  function getMixedCameraAndScreen() {\n    if (permissionAllowed) {\n      if (navigator.getDisplayMedia) {\n        navigator.getDisplayMedia({ video: true }).then((screenStream) => {\n          afterScreenCaptured(screenStream);\n        });\n      } else if (navigator.mediaDevices.getDisplayMedia) {\n        navigator.mediaDevices\n          .getDisplayMedia({ video: true })\n          .then((screenStream) => {\n            afterScreenCaptured(screenStream);\n          });\n      } else {\n        alert(\"getDisplayMedia API is not supported by this browser.\");\n      }\n    }\n  }\n\n  async function cameraStream() {\n    let captureStream = null;\n    try {\n      captureStream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true,\n      });\n    } catch (err) {\n      console.error(\"Error: \" + err);\n    }\n    return captureStream;\n  }\n\n  function startRecording() {\n    getMixedCameraAndScreen();\n  }\n\n  function handleDataAvailable(event) {\n    console.log(\"handleDataAvailable\", event);\n    if (event.data && event.data.size > 0) {\n      recordedBlobs.push(event.data);\n    }\n  }\n\n  function stopRecording() {\n    mediaRecorder.stop();\n  }\n\n  async function download() {\n    const blob = new Blob(recordedBlobs, { type: \"video/mp4\" });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.style.display = \"none\";\n    a.href = url;\n    a.download = new Date().getTime() + \".mp4\";\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 100);\n    setStart(false);\n    videoPreview.pause();\n    videoPreview.src = null;\n  }\n\n  return (\n    <div className=\"App\">\n      <h2>Youtube Tutorial Maker - By Arghyadeep</h2>\n      <p className=\"info\">\n        Not supported in small devices. Please open in desktop browser\n      </p>\n      <p style={{ textAlign: \"center\" }}>\n        Supported Browser:{\" \"}\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getDisplayMedia\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Screen Capture\n        </a>\n        ,{\" \"}\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Camera & Audio\n        </a>\n      </p>\n      <div className=\"layout\">\n        {!permissionAllowed && (\n          <div>\n            <video\n              src=\"\"\n              style={{ backgroundColor: \"#444\", height: 200 }}\n            ></video>\n            <p>\n              <span style={{ fontWeight: 600 }}>Note: </span>You need to allow\n              camera & audio permission to start recording\n            </p>\n          </div>\n        )}\n        {permissionAllowed && (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              height: \"100%\",\n            }}\n          >\n            <video\n              id=\"video\"\n              style={{ height: \"70%\", backgroundColor: \"#444\" }}\n              autoPlay\n              muted\n              playsInline\n            >\n              Your browser does not support the video tag.\n            </video>\n            {/* <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"center\",\n                marginTop: 16,\n              }}\n            >\n              <span>\n                Camera\n                <select\n                  placeholder=\"Select Camera Position\"\n                  style={{ padding: \"4px 8px\", marginLeft: 8 }}\n                >\n                  <option>Top right</option>\n                  <option>Top left</option>\n                  <option>Bottom right</option>\n                  <option>Bottom Left</option>\n                </select>\n              </span>\n            </div> */}\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                justifyContent: \"space-between\",\n                marginTop: 24,\n              }}\n            >\n              {!started && (\n                <button\n                  style={{\n                    border: \"1px solid #111\",\n                    borderRadius: 4,\n                    cursor: \"pointer\",\n                    margin: \"auto\",\n                    fontSize: 16,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    padding: 8,\n                    width: 100,\n                    backgroundColor: \"#fff\",\n                  }}\n                  onClick={() => startRecording()}\n                >\n                  <img\n                    src={play}\n                    alt=\"play\"\n                    style={{ height: 36, marginRight: 8 }}\n                  ></img>{\" \"}\n                  Start\n                </button>\n              )}\n              {/* {started && (\n                <button\n                  style={{\n                    border: \"1px solid #111\",\n                    borderRadius: 4,\n                    cursor: \"pointer\",\n                    margin: \"auto\",\n                    fontSize: 16,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    padding: 8,\n                    width: 120,\n                    backgroundColor: \"#fff\",\n                  }}\n                >\n                  <img\n                    src={pause}\n                    alt=\"pause\"\n                    style={{ height: 36, marginRight: 8 }}\n                  ></img>{\" \"}\n                  Pause\n                </button>\n              )} */}\n              {started && (\n                <button\n                  style={{\n                    border: \"1px solid #111\",\n                    borderRadius: 4,\n                    cursor: \"pointer\",\n                    margin: \"auto\",\n                    fontSize: 16,\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    padding: 8,\n                    width: 180,\n                    backgroundColor: \"#fff\",\n                  }}\n                  onClick={() => stopRecording()}\n                >\n                  <img\n                    src={stop}\n                    alt=\"stop\"\n                    style={{ height: 36, marginRight: 8 }}\n                  ></img>{\" \"}\n                  Stop & Save\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n      <p style={{ textAlign: \"center\", marginTop: 24 }}>\n        Devloped by{\" \"}\n        <a\n          href=\"https://github.com/argodeep?tab=repositories\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Arghyadeep\n        </a>\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}